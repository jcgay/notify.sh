#!/bin/bash

usage()
{
cat << EOF
usage: $0 long-running-command

Send a desktop notification when a task is done.
The notification will reflect the task result (success or failure).

This script uses send-notification (https://github.com/jcgay/send-notification) to notify.

OPTIONS:
   -h      Show this message

EXAMPLES:
	 notify make install
EOF
}

if [[ $# -eq 0 ]] || [[ $1 == "-h" ]]; then
  usage
	exit 0
fi

check_dependency() {
	command -v send-notification >/dev/null 2>&1 || quit_error "send-notification is required but is not installed. Aborting.\n Go get it at https://github.com/jcgay/send-notification#cli"
	command -v base64 >/dev/null 2>&1 || quit_error "base64 us required but is not installed. Aborting."
}
check_dependency

quit_error() {
  echo -e "[ERROR] $1" >&2
  exit 1
}

notify() {
  level=$1
  title=$2
  msg=$3
	icon=$4

  send-notification -l $level -m "$msg" -t "$title" -i $icon
}

tmpIcon() {
	tmp=`mktemp -d 2>/dev/null || mktemp -d -t 'notify-sh'`
	if [[ $OSTYPE == darwin* ]]; then
  		echo $2 | base64 -D -o "$tmp/$1"
  else
      echo $2 | base64 -d -o "$tmp/$1"
  fi
	echo $tmp/$1
}

success() {
	title=$1

	icon=$(tmpIcon 'success.png' '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')
	notify "INFO" "$title" "'$title' has finished with success." $icon
}

failure() {
	title=$1

	icon=$(tmpIcon 'failure.png' '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')
	notify "ERROR" "$title" "'$title' has failed." $icon
}

$@
result=$?

executing="$@"
if [[ $result -eq 0 ]]; then
  success "$executing"
else
  failure "$executing"
fi

notify_result=$?
if [[ $notify_result -ne 0 ]]; then
	echo -e "[ERROR] Notification has failed... (see send-notification 'logs' directory)" >&2
fi

exit $result
